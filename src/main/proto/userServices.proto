syntax = "proto3";

package user;

service UserService {
  rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse); //IMPLEMENTATO
  rpc LoginUser(LoginUserRequest) returns (LoginUserResponse); //IMPLEMENTATO
  rpc BookFlight(FlightBookRequest) returns (FlightBookResponse); //IMPLEMENTATO
  rpc CancelBookFlight(CancelBookFlightRequest) returns (CancelBookFlightResponse); //IMPLEMENTATO
  rpc PurchaseTicket(PurchaseTicketRequest) returns (PurchaseTicketResponse); //IMPLEMENTATO
  rpc CheckFlightAvailability(CheckFlightAvailabilityRequest) returns (CheckFlightAvailabilityResponse); //IMPLEMENTATO
  rpc ChangeFlightDate(ChangeFlightDateRequest) returns (ChangeFlightDateResponse); //IMPLEMENTATO
  rpc ActuallyChangeFlightDate(ActuallyChangeFlightDateRequest) returns (ActuallyChangeFlightDateResponse); //IMPLEMENTATO
  rpc NotifyClient(NotifyClientRequest) returns (NotifyClientResponse);
  rpc FetchAllTickets(FetchAllTicketsRequest) returns (FetchAllTicketsResponse);
  rpc FetchAllBookings(FetchAllBookingsRequest) returns (FetchAllBookingsResponse);
}
message FetchAllTicketsRequest{
  string email = 1;
}

message FetchAllTicketsResponse{
  repeated Ticket tickets = 1;
  bool success = 2;
}

message FetchAllBookingsRequest{
  string email = 1;
}

message FetchAllBookingsResponse{
  repeated Booking bookings = 1;
  bool success = 2;
}

message Ticket{
  string ticketId = 1;
  string passengerName = 2;
  string passengerSurname = 3;
  string email = 4;
  string flightId = 5;
}

message Booking{
  string bookingId = 1;
  string name = 2;
  string surname = 3;
  string flightId = 4;
  string email = 5;
  int32 bookedTicketsNum = 6;
}

message NotifyClientRequest{
  bool isRegistered = 1;
}

message NotifyClientResponse{
  repeated Promo promo = 1;
}

message Promo{
  string description = 1;
  string code = 2;
  string endDate = 3;
  string origin = 4;
  string destination = 5;
  bool fidelityOnly = 6;
  double discountFactor = 7;
}

message CancelBookFlightRequest{
  string flightId = 1;
  string email = 2;
}

message CancelBookFlightResponse{
  string message = 1;
  bool success = 2;
}

message RegisterUserRequest {
  string email = 1;
  string password = 2;
  string luogoDiNascita = 4;
  string regioneDiNascita = 5;
  string dataDiNascita = 6;
  string name = 7;
  string surname = 8;
}

message RegisterUserResponse {
  bool success = 1;
  string message = 2;
}

message User {
  string email = 1;
  string password = 2;
  string luogoDiNascita = 3;
  string regioneDiNascita = 4;
  string dataDiNascita = 5;
  string name = 6;
  string surname = 7;
  string userId = 8;
  string lastPurchaseDate = 9;
}

message LoginUserRequest {
  string email = 1;
  string password = 2;
}

message LoginUserResponse {
  bool success = 1;
  string message = 2;
  User user = 3;
}

message FlightBookRequest {
  string name = 1;
  string surname = 2;
  string flightId = 3;
  string email = 4;
  int32 bookedTicketsNum = 5;
}

message FlightBookResponse {
  bool success = 1;
  string message = 2;
}

message PurchaseTicketRequest {
  string flightId = 1;
  string userEmail = 2;
  string name = 3;
  string surname = 4;
  string cardNumber = 5;
}

message PurchaseTicketResponse {
  bool success = 1;
  string message = 2;
}

message CheckFlightAvailabilityRequest {
  string origin = 1;
  string destination = 2;
  string date = 3;
}

message CheckFlightAvailabilityResponse {
  repeated Flight flights = 1;
}

message Flight {
  string flightId = 1;
  string origin = 2;
  string destination = 3;
  string departureTime = 4;
  string arrivalTime = 5;
  double price = 6;
  int32 availableSeats = 7;
}

message ChangeFlightDateRequest {
  string bookingId = 1;
  string newDateDeparture = 2;
}

message ChangeFlightDateResponse {
  bool possible = 1;
  string message = 2;
  repeated Flight flights = 3;
}

message ActuallyChangeFlightDateRequest {
  string bookingId = 1;
  string newFlightId = 2;
  int32 cost = 3;
  string cardNumber = 4;
}

message ActuallyChangeFlightDateResponse {
  bool success = 1;
  string message = 2;
  string newBookingId = 3;
}
