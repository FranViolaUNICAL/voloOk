syntax = "proto3";

package user;

service UserService {
  rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse);
  rpc LoginUser(LoginUserRequest) returns (LoginUserResponse);
  rpc RequestFlightBooking(RequestFlightBookingRequest) returns (RequestFlightBookingResponse);
  rpc PurchaseTicket(PurchaseTicketRequest) returns (PurchaseTicketResponse);
  rpc CheckFlightAvailability(CheckFlightAvailabilityRequest) returns (CheckFlightAvailabilityResponse);
  rpc ChangeFlightDate(ChangeFlightDateRequest) returns (ChangeFlightDateResponse);
}

message RegisterUserRequest {
  string email = 1;
  string password = 2;
  string luogoDiNascita = 4;
  string regioneDiNascita = 5;
  string dataDiNascita = 6;
  string name = 7;
  string surname = 8;
}

message RegisterUserResponse {
  bool success = 1;
  string message = 2;
  string userId = 3;
}

message LoginUserRequest {
  string email = 1;
  string password = 2;
}

message LoginUserResponse {
  bool success = 1;
  string message = 2;
}

message RequestFlightBookingRequest {
  string userId = 1;
  string flightId = 2;
}

message RequestFlightBookingResponse {
  bool success = 1;
  string message = 2;
}

message PurchaseTicketRequest {
  string flightId = 1;
  string userEmail = 2;
  string name = 3;
  string surname = 4;
  string cardNumber = 5;
}

message PurchaseTicketResponse {
  bool success = 1;
  string message = 2;
}

message CheckFlightAvailabilityRequest {
  string origin = 1;
  string destination = 2;
  string date = 3;
}

message CheckFlightAvailabilityResponse {
  repeated Flight flights = 1;
}

message Flight {
  string flightId = 1;
  string origin = 2;
  string destination = 3;
  string departureTime = 4;
  string arrivalTime = 5;
  double price = 6;
  int32 availableSeats = 7;
}

message ChangeFlightDateRequest {
  string userId = 1;
  string flightId = 2;
  string newDate = 3;
}

message ChangeFlightDateResponse {
  bool success = 1;
  string message = 2;
}
